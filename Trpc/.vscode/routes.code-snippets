{
  "addRecord": {
    "scope": "typescript",
    "prefix": "addRecord",
    "body": [
      "/** 新增${1:应用} */",
      "addRecord: procedure",
      "  .meta({",
      "    description: \"新增${1:应用}\"",
      "  })",
      "  .input(${2:Application}CreateZod)",
      "  .mutation(async ({ input }) => {",
      "    const res = await add${3:Application}(input);",
      "    if (res?.id) return getDefaultResponse();",
      "    return getDefaultFailResponse();",
      "  }),"
    ],
    "description": "新增记录"
  },
  "deleteRecodeById": {
    "scope": "typescript",
    "prefix": "deleteRecodeById",
    "body": [
      "/** 根据id删除应用 */",
      "deleteRecodeById: procedure",
      "  .meta({",
      "    description: \"删除应用\"",
      "  })",
      "  .input(ApplicationZod.pick({ id: true }))",
      "  .mutation(async ({ input }) => {",
      "    const res = await deleteApplicationById(input.id);",
      "    if (res.id === input.id) return getDefaultResponse();",
      "    return getDefaultFailResponse();",
      "  }),"
    ],
    "description": "删除记录"
  },
  "getList": {
		"scope": "typescript",
		"prefix": "getList",
		"body": [
      "/** 获取全部应用列表 */",
      "getList: procedure",
      "  .meta({",
      "    description: \"获取全部应用列表\"",
      "  })",
      "  .output(ApiResponseZod(z.array(ApplicationZod)))",
      "  .query(async () => {",
      "    const list = await getApplicationList();",
      "    return getDefaultResponse(list);",
      "  }),"
    ],
		"description": "查找所有数据"
	},
  "getListByPage": {
		"scope": "typescript",
    "prefix": "getListByPage",
    "body": [
      "/** 分页获取应用列表 */",
      "getListByPage: procedure",
      "  .meta({",
      "    description: \"分页获取应用列表\"",
      "  })",
      "  .input(PageInfoQueryZod)",
      "  .output(ApiPageResponseZod(ApplicationZod))",
      "  .query(async ({ input }) => {",
      "    const list = await getApplicationList();",
      "    return getDefaultPageResponse(input, list, 1000);",
      "  }),"
    ],
    "description": "查找分页数据"
  },
  "updateRecord": {
    "scope": "typescript",
    "prefix": "updateRecord",
    "body": [
      "/** 更新应用信息 */",
      "updateRecord: procedure",
      "  .meta({",
      "    description: '更新应用信息'",
      "  })",
      "  .input(ApplicationUpdateZod)",
      "  .output(ApiResponseZod())",
      "  .mutation(async ({ input }) => {",
      "    const res = await updateApplicationById(input);",
      "    if (res.id == input.id) return getDefaultResponse();",
      "    return getDefaultFailResponse();",
      "  }),"
    ],
    "description": "更新记录"
  }

}